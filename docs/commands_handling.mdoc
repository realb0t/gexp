# Обработка команд

С примером обработки команд можно ознакомиться
в спецификации

```
spec/gexp/item_spec.rb
```

Данный документ содержит описание взаимодействия объектов при получении запроса от сервера.

### Описание внешнего API

Основным классом по внешниму взаимодействию
является абстрактный класс Gexp::Receiver.

Его конечная реализация должна обеспечивать транзакционность выполнения пачки (batch) комманд (пример находится в lib/gexp/receiver/example.rb).

Интерфейс состоит из нескольких операций

1) Создание объекта Receiver

```ruby
  Gexp::Receiver::Example.new user, request
```

В конструктор объекта передается объект пользователя (над которым может осуществляться транзакция) а также объект запроса вида

{
  params: {
    sended_at: <>,
    created_at: <>,
    commands: [...]
  }
}

В параметре commands находится содержимое пачки команд (batch), в виде хешей вида

{
  event: :<event_name>,
  stage: { x: <0>, y: <0> },
  rewards: { <resource_name>: <value> },
  timestamp: <0.0>,
  objects: { '<class_name>': '<hash_id>' },
  transition: { <from_state>: <to_state> },
  seed: <random_seed>
}

```
TODO: Сделать objects и transition массивами хешей, чтобы задавать переходы для каждого объекта
```

2) Создание комманд

При создании объекта Receiver создается объект
Gexp::Command::Stack, который выражает пачку команд.

При создании этого объекта создаются объекты под каждую команду.

Команда имет 4 состояния

1. new - создана
2. active - начала исполнение
3. done - выполнена успешно
4. failed - проваленна

У команды есть поля

* errors - массив ошибок
* context - хеш контекста
* params - первоначальные параметры
* event - событие